service: product-service
frameworkVersion: '3'

provider:
    name: aws
    runtime: nodejs16.x
    region: us-east-1

    iamRoleStatements:
        - Effect: "Allow"
          Action: "s3:PutObject"
          Resource:
            - "arn:aws:s3:::aws-angular-shop-bucket-s3/uploaded/*"
        - Effect: "Allow"
          Action: "s3:GetObject"
          Resource:
            - "arn:aws:s3:::aws-angular-shop-bucket-s3/*"
        - Effect: "Allow"
          Action: "sqs:*"
          Resource:
            - "arn:aws:sqs:us-east-1:818211481183:catalog-items-queue"
        - Effect: "Allow"
          Action:
            - "sns:*"
          Resource:
            Ref: createProductTopic
        - Effect: "Allow"
          Action:
            - "sns:*"
          Resource:
            Ref: createProductTopicEmailSubscription


functions:
    getProductsList:
        handler: handler.getProductsList
        environment:
            PRODUCTS_TABLE_NAME: products
            STOCKS_TABLE_NAME: stocks
        events:
            - http:
                  path: products
                  method: get
                  cors: true

    getProductsById:
        handler: handler.getProductsById
        environment:
            PRODUCTS_TABLE_NAME: products
            STOCKS_TABLE_NAME: stocks
        events:
            - http:
                  path: products/{productId}
                  method: get
                  cors: true

    createProduct:
        handler: handler.createProduct
        environment:
            PRODUCTS_TABLE_NAME: products
            STOCKS_TABLE_NAME: stocks
        events:
            - http:
                  path: products
                  method: post
                  cors: true
    catalogBatchProcess:
        handler: catalogBatchProcess.handler
        environment:
            PRODUCTS_TABLE_NAME: products
            STOCKS_TABLE_NAME: stocks
        events:
            - sqs:
                arn: arn:aws:sqs:us-east-1:818211481183:catalog-items-queue
                batchSize: 5
                maximumBatchingWindow: 60
resources:
    Resources:
        MyFunctionRole:
            Type: AWS::IAM::Role
            Properties:
                RoleName: MyFunctionRole
                AssumeRolePolicyDocument:
                    Version: '2012-10-17'
                    Statement:
                        - Effect: Allow
                          Principal:
                              Service:
                                  - lambda.amazonaws.com
                          Action:
                              - sts:AssumeRole
                Policies:
                    - PolicyName: DynamoDBAccess
                      PolicyDocument:
                          Version: '2012-10-17'
                          Statement:
                              - Effect: Allow
                                Action:
                                    - dynamodb:*
                                Resource:
                                    - arn:aws:dynamodb:us-east-1:818211481183:table/products
                                    - arn:aws:dynamodb:us-east-1:818211481183:table/stocks
        createProductTopic:
            Type: AWS::SNS::Topic
            Properties:
                TopicName: create-product-topic

        createProductTopicEmailSubscription:
            Type: AWS::SNS::Subscription
            Properties:
                Protocol: email
                TopicArn:
                    Ref: createProductTopic
                Endpoint: kotlinski95@gmail.com
